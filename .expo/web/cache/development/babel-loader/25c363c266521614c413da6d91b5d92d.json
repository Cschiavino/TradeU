{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jennie/MobileApp/App.js\";\nimport 'react-native-gesture-handler';\nimport * as AuthSession from \"expo-auth-session\";\nimport jwtDecode from \"jwt-decode\";\nimport * as React from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar auth0ClientId = \"Ajj8vm5QhqdxzOry1D9YJHiZyPQLvQAN\";\nvar authorizationEndpoint = \"https://dev-smzgyb-n.us.auth0.com/authorize\";\nvar useProxy = Platform.select({\n  web: false,\n  default: true,\n  android: true\n});\nvar redirectUri = AuthSession.makeRedirectUri({\n  useProxy: useProxy\n});\nexport default function App() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _AuthSession$useAuthR = AuthSession.useAuthRequest({\n    redirectUri: redirectUri,\n    clientId: auth0ClientId,\n    responseType: \"id_token\",\n    scopes: [\"openid\", \"profile\"],\n    extraParams: {\n      nonce: \"nonce\"\n    }\n  }, {\n    authorizationEndpoint: authorizationEndpoint\n  }),\n      _AuthSession$useAuthR2 = _slicedToArray(_AuthSession$useAuthR, 3),\n      request = _AuthSession$useAuthR2[0],\n      result = _AuthSession$useAuthR2[1],\n      promptAsync = _AuthSession$useAuthR2[2];\n\n  console.log(\"Redirect URL: \" + redirectUri);\n  console.log(\"Request: \" + request);\n  React.useEffect(function () {\n    if (result) {\n      if (result.error) {\n        Alert.alert(\"Authentication error\", result.params.error_description || \"something went wrong\");\n        return;\n      }\n\n      if (result.type === \"success\") {\n        var jwtToken = result.params.id_token;\n        var decoded = jwtDecode(jwtToken);\n        var _name = decoded.name;\n        setName(_name);\n      }\n    }\n  }, [result]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, name ? React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"You are logged in, \", name, \"!\"), React.createElement(Button, {\n    title: \"Log out\",\n    onPress: function onPress() {\n      return setName(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })) : React.createElement(Button, {\n    disabled: !request,\n    title: \"Log in with Auth0\",\n    onPress: function onPress() {\n      return promptAsync({\n        useProxy: useProxy\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    textAlign: \"center\",\n    marginTop: 40\n  }\n});","map":{"version":3,"sources":["/Users/jennie/MobileApp/App.js"],"names":["AuthSession","jwtDecode","React","auth0ClientId","authorizationEndpoint","useProxy","Platform","select","web","default","android","redirectUri","makeRedirectUri","App","useState","name","setName","useAuthRequest","clientId","responseType","scopes","extraParams","nonce","request","result","promptAsync","console","log","useEffect","error","Alert","alert","params","error_description","type","jwtToken","id_token","decoded","styles","container","title","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","textAlign","marginTop"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport * as AuthSession from \"expo-auth-session\";\nimport jwtDecode from \"jwt-decode\";\nimport * as React from \"react\";\nimport { Alert, Button, Platform, StyleSheet, Text, View } from \"react-native\";\n\n// You need to swap out the Auth0 client id and domain with the one from your Auth0 client.\n// In your Auth0 client, you need to also add a url to your authorized redirect urls.\n//\n// For this application, I added https://auth.expo.io/@arielweinberger/with-auth0 because I am\n// signed in as the 'arielweinberger' account on Expo and the name/slug for this app is 'with-auth0'.\n//\n// You can open this app in the Expo client and check your logs to find out your redirect URL.\n\nconst auth0ClientId = \"Ajj8vm5QhqdxzOry1D9YJHiZyPQLvQAN\";\nconst authorizationEndpoint = \"https://dev-smzgyb-n.us.auth0.com/authorize\";\n\nconst useProxy = Platform.select({ web: false, default: true, android: true});\nconst redirectUri = AuthSession.makeRedirectUri({ useProxy });\n\nexport default function App() {\n  const [name, setName] = React.useState(null);\n\n  const [request, result, promptAsync] = AuthSession.useAuthRequest(\n    {\n      redirectUri,\n      clientId: auth0ClientId,\n      // id_token will return a JWT token\n      responseType: \"id_token\",\n      // retrieve the user's profile\n      scopes: [\"openid\", \"profile\"],\n      extraParams: {\n        // ideally, this will be a random value\n        nonce: \"nonce\"\n      }\n    },\n    { authorizationEndpoint }\n  );\n\n  // Retrieve the redirect URL, add this to the callback URL list\n  // of your Auth0 application.\n  console.log(`Redirect URL: ${redirectUri}`);\n  console.log(`Request: ${request}`);\n\n  React.useEffect(() => {\n    if (result) {\n      if (result.error) {\n        Alert.alert(\n          \"Authentication error\",\n          result.params.error_description || \"something went wrong\"\n        );\n        return;\n      }\n      if (result.type === \"success\") {\n        // Retrieve the JWT token and decode it\n        const jwtToken = result.params.id_token;\n        const decoded = jwtDecode(jwtToken);\n\n        const { name } = decoded;\n        setName(name);\n      }\n    }\n  }, [result]);\n\n  return (\n    <View style={styles.container}>\n      {name ? (\n        <>\n          <Text style={styles.title}>You are logged in, {name}!</Text>\n          <Button title=\"Log out\" onPress={() => setName(null)} />\n        </>\n      ) : (\n        <Button\n          disabled={!request}\n          title=\"Log in with Auth0\"\n          onPress={() => promptAsync({ useProxy })}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // Platform.select({\n    //   android: {\n    //     backgroundColor: '#334B68'\n    //   },\n    //   default: {\n    //     backgroundColor: '#334B68'\n    //   }\n    // })\n  },\n  title: {\n    fontSize: 20,\n    textAlign: \"center\",\n    marginTop: 40\n  }\n});\n"]},"metadata":{},"sourceType":"module"}